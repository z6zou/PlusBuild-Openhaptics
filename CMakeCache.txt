# This is the CMakeCache file.
# For build in directory: c:/Project/PlusB-bin
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a program.
BASH_EXECUTABLE:FILEPATH=C:/Program Files/Git/bin/bash.exe

//Name of the build on the dashboard
BUILDNAME:STRING=vs16x64-Windows-10.0.18363

//Build the testing tree.
BUILD_TESTING:BOOL=ON

//Path to a program.
BZRCOMMAND:FILEPATH=BZRCOMMAND-NOTFOUND

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/amd64/lib.exe

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files/PlusBuild

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/amd64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=CMAKE_MT-NOTFOUND

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=PlusBuild

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=OFF

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=OFF

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=OFF

//Path to the coverage program that CTest uses for performing coverage
// inspection
COVERAGE_COMMAND:FILEPATH=COVERAGE_COMMAND-NOTFOUND

//Extra command line flags to pass to the coverage tool
COVERAGE_EXTRA_FLAGS:STRING=-l

//How many times to retry timed-out CTest submissions.
CTEST_SUBMIT_RETRY_COUNT:STRING=3

//How long to wait between timed-out CTest submissions.
CTEST_SUBMIT_RETRY_DELAY:STRING=5

//Path to a program.
CVSCOMMAND:FILEPATH=CVSCOMMAND-NOTFOUND

//Options passed to the cvs update command.
CVS_UPDATE_OPTIONS:STRING=-d -A -P

//Maximum time allowed before CTest will kill the test.
DART_TESTING_TIMEOUT:STRING=1500

//Path to a program.
GITCOMMAND:FILEPATH=C:/Program Files/Git/cmd/git.exe

//Path to a file.
GIT_EXECUTABLE:FILEPATH=C:/Program Files/Git/cmd/git.exe

//Path to a file.
HDAPI_HDU_INCLUDE_DIR:PATH=C:/Project/OpenHaptics/utilities/include

//Path to a library.
HDAPI_HDU_LIBRARY_DEBUG:FILEPATH=C:/Project/OpenHaptics/utilities/lib/x64/Debug/hdu.lib

//Path to a library.
HDAPI_HDU_LIBRARY_RELEASE:FILEPATH=C:/Project/OpenHaptics/utilities/lib/x64/Release/hdu.lib

//Path to a file.
HDAPI_INCLUDE_DIR:PATH=C:/Project/OpenHaptics/include

//Path to a library.
HDAPI_LIBRARY_DEBUG:FILEPATH=C:/Project/OpenHaptics/lib/x64/Debug/hd.lib

//Path to a library.
HDAPI_LIBRARY_RELEASE:FILEPATH=C:/Project/OpenHaptics/lib/x64/Release/hd.lib

//Path to a program.
HGCOMMAND:FILEPATH=HGCOMMAND-NOTFOUND

//Path to a file.
HLAPI_HLU_INCLUDE_DIR:PATH=C:/Project/OpenHaptics/utilities/include

//Path to a library.
HLAPI_HLU_LIBRARY_DEBUG:FILEPATH=C:/Project/OpenHaptics/utilities/lib/x64/Debug/hlu.lib

//Path to a library.
HLAPI_HLU_LIBRARY_RELEASE:FILEPATH=C:/Project/OpenHaptics/utilities/lib/x64/Release/hlu.lib

//Path to a file.
HLAPI_INCLUDE_DIR:PATH=C:/Project/OpenHaptics/include

//Path to a library.
HLAPI_LIBRARY_DEBUG:FILEPATH=C:/Project/OpenHaptics/lib/x64/Debug/hl.lib

//Path to a library.
HLAPI_LIBRARY_RELEASE:FILEPATH=C:/Project/OpenHaptics/lib/x64/Release/hl.lib

//Command to build the project
MAKECOMMAND:STRING="C:\Program Files\CMake\bin\cmake.exe" --build . --config "${CTEST_CONFIGURATION_TYPE}"

//Path to the memory checking command, used for memory error detection.
MEMORYCHECK_COMMAND:FILEPATH=MEMORYCHECK_COMMAND-NOTFOUND

//File that contains suppressions for the memory checker
MEMORYCHECK_SUPPRESSIONS_FILE:FILEPATH=

//Root directory for OpenHaptics
OpenHaptics_ROOT_DIR:PATH=C:/Project/OpenHaptics

//Path to a program.
P4COMMAND:FILEPATH=P4COMMAND-NOTFOUND

//The directory containing PlusApp binaries
PLUSAPP_DIR:PATH=C:/Project/PlusB-bin/PlusApp-bin

//Set PlusApp desired git url
PLUSAPP_GIT_REPOSITORY:STRING=https://github.com/PlusToolkit/PlusApp.git

//Set PlusApp desired git hash (master means latest)
PLUSAPP_GIT_REVISION:STRING=Plus-2.8

//Specifies a name that refers to the combination of hardware devices
// the created install package supports. The name is added to the
// package filename.
PLUSAPP_PACKAGE_EDITION:STRING=

//Enable GUI tests
PLUSAPP_TEST_GUI:BOOL=ON

//Postfix that will be appended to the build name on the dashboard.
// If defined then BUILDNAME variable is always overwritten.
PLUSBUILD_BUILDNAME_POSTFIX:STRING=

//Build PlusApp applications
PLUSBUILD_BUILD_PLUSAPP:BOOL=ON

//Build PlusLib widgets (required Qt)
PLUSBUILD_BUILD_PLUSLIB_WIDGETS:BOOL=ON

//Build Plus 3D printable model catalog
PLUSBUILD_BUILD_PLUSMODELCATALOG:BOOL=OFF

//Build the PlusLib tools (PlusServer, PlusServerRemoteControl...)
PLUSBUILD_BUILD_PlusLib_TOOLS:BOOL=ON

//Build shared libraries instead of statically-linked libraries
PLUSBUILD_BUILD_SHARED_LIBS:BOOL=ON

//Build Plus documentation (Doxygen).
PLUSBUILD_DOCUMENTATION:BOOL=OFF

//Download sample and test data. Required for automatic tests.
PLUSBUILD_DOWNLOAD_PLUSLIBDATA:BOOL=ON

//User-selected VTK version to build Plus against
PLUSBUILD_EXTERNAL_VTK_VERSION:STRING=v8.2.0

PLUSBUILD_INSTALL_ITK:BOOL=ON

PLUSBUILD_INSTALL_VTK:BOOL=ON

//Build Plus without an internet connection. All libraries must
// be downloaded and updated manually.
PLUSBUILD_OFFLINE_BUILD:BOOL=OFF

//Set PlusLibData desired git url.
PLUSBUILD_PLUSLIBDATA_GIT_REPOSITORY:STRING=https://github.com/PlusToolkit/PlusLibData.git

//Set PlusLibData desired git hash (master means latest).
PLUSBUILD_PLUSLIBDATA_GIT_REVISION:STRING=Plus-2.8

//Clone the PlusDoc submodule in PlusLib
PLUSBUILD_PLUSLIB_DOCUMENTATION:BOOL=ON

//Instead of building ITK, VTK, OpenIGTLink, etc., get them from
// a 3D Slicer build tree.
PLUSBUILD_USE_3DSlicer:BOOL=OFF

//If behind a firewall turn this off to use https instead.
PLUSBUILD_USE_GIT_PROTOCOL:BOOL=OFF

//Use OpenCV for optical marker tracking and other features.
PLUSBUILD_USE_OpenCV:BOOL=OFF

//Use OpenIGTLink
PLUSBUILD_USE_OpenIGTLink:BOOL=ON

//Use OCR in PlusLib for recognizing ultrasound imaging parameters
// by reading text from grabbed images.
PLUSBUILD_USE_Tesseract:BOOL=OFF

//Use aruco for optical marker tracking.
PLUSBUILD_USE_aruco:BOOL=OFF

//Choose the rendering backend. OpenGL2 is only compatible with
// more recent graphics cards and does not work on embedded systems
// like Ultrasonix Windows XPe based systems.
PLUSBUILD_VTK_RENDERING_BACKEND:STRING=OpenGL2

//The directory containing PlusLib data
PLUSLIB_DATA_DIR:PATH=C:/Project/PlusB-bin/PlusLibData

//The directory containing PlusLib binaries
PLUSLIB_DIR:PATH=C:/Project/PlusB-bin/PlusLib-bin

//Set PlusLib desired git url
PLUSLIB_GIT_REPOSITORY:STRING=https://github.com/PlusToolkit/PlusLib.git

//Set PlusLib desired git hash (master means latest)
PLUSLIB_GIT_REVISION:STRING=Plus-2.8

//Provide support for streaming compressed video from Plus
PLUS_ENABLE_VIDEOSTREAMING:BOOL=OFF

//Set version of ITK to use. ITK 5 is reccommended
PLUS_ITK_VERSION:STRING=4

//Enable testing of high-accuracy timing. High-accuracy timing
// may not be available on virtual machines and so testing may
// be turned off to avoid false alarams.
PLUS_TEST_HIGH_ACCURACY_TIMING:BOOL=ON

//Provide support for the 3dConnexion 3d mouse
PLUS_USE_3dConnexion_TRACKER:BOOL=OFF

//Provide support for the Agilent digitizer device
PLUS_USE_AGILENT:BOOL=OFF

//Provide support for Atracsys optical trackers
PLUS_USE_ATRACSYS:BOOL=OFF

//Provide support for the Ascension 3DG Tracker
PLUS_USE_Ascension3DG:BOOL=OFF

//Provide support for the Ascension MedSafe Tracker
PLUS_USE_Ascension3DGm:BOOL=OFF

//Provide support for BK ProFocus ultrasound systems through the
// OEM (TCP/IP) interface
PLUS_USE_BKPROFOCUS_VIDEO:BOOL=OFF

//Provide support for BlackMagic DeckLink capture cards.
PLUS_USE_BLACKMAGIC_DECKLINK:BOOL=OFF

//Provide support for the Brachy Steppers
PLUS_USE_BRACHY_TRACKER:BOOL=OFF

//Provide support for the Capistrano Labs USB ultrasound probes
PLUS_USE_CAPISTRANO_VIDEO:BOOL=OFF

//Provide support for the NDI Certus
PLUS_USE_CERTUS:BOOL=OFF

//Provide support for Clarius Ultrasound devices
PLUS_USE_CLARIUS:BOOL=OFF

//Provide support for the Epiphan framegrabber device
PLUS_USE_EPIPHAN:BOOL=OFF

//Provide support for the IC framegrabber device
PLUS_USE_ICCAPTURING_VIDEO:BOOL=OFF

//Provide support for capturing an Infrared Seek Camera capture
// stream
PLUS_USE_INFRARED_SEEK_CAM:BOOL=OFF

//Provide support for capturing an Infrared Therma Expert Q1 Camera
// capture stream
PLUS_USE_INFRARED_TEQ1_CAM:BOOL=OFF

//Provide support for Intel RealSense cameras
PLUS_USE_INTELREALSENSE:BOOL=OFF

//Provide support for the Interson SDK 1.X with C++ Wrapper USB
// ultrasound probes
PLUS_USE_INTERSONSDKCXX_VIDEO:BOOL=OFF

//Provide support for the Interson USB ultrasound probes
PLUS_USE_INTERSON_VIDEO:BOOL=OFF

//Provide support for the da Vinci Surgical System
PLUS_USE_IntuitiveDaVinci:BOOL=OFF

//Provide support for the LeapMotion hand tracker
PLUS_USE_LEAPMOTION:BOOL=OFF

//Provide support for the Claron MicronTracker
PLUS_USE_MICRONTRACKER:BOOL=OFF

//Enable reading/writing MKV files using libwebm.
PLUS_USE_MKV_IO:BOOL=OFF

//Provide support for the Microsoft Media Foundation video digitizers
// (requires installation of Windows Platform SDK 7.1 or later)
PLUS_USE_MMF_VIDEO:BOOL=OFF

//Provide support for the NDI POLARIS and AURORA
PLUS_USE_NDI:BOOL=OFF

//Provide support for the NDI Certus
PLUS_USE_NDI_CERTUS:BOOL=OFF

//Provide support for the NVidia Digital Video Pipeline
PLUS_USE_NVIDIA_DVP:BOOL=OFF

//Provide support of OpenHaptics devices
PLUS_USE_OPENHAPTICS:BOOL=ON

//Provide support of tracking of markers (2D barcodes) in image
// streams using ArUco and OpenCV.
PLUS_USE_OPTICAL_MARKER_TRACKER:BOOL=OFF

//Provide support for the Optimet ConoProbe
PLUS_USE_OPTIMET_CONOPROBE:BOOL=OFF

//Provide support for the OptiTrack tracking system
PLUS_USE_OPTITRACK:BOOL=OFF

//Provide support for capturing an OpenCV capture stream
PLUS_USE_OpenCV_VIDEO:BOOL=OFF

//Provide support for the OvrvisionPro Stereo Camera
PLUS_USE_OvrvisionPro:BOOL=OFF

//Provide support for the Phidget Spatial accelerometer
PLUS_USE_PHIDGET_SPATIAL_TRACKER:BOOL=OFF

//Provide support for the Philips ie33 3D ultrasound probe
PLUS_USE_PHILIPS_3D_ULTRASOUND:BOOL=OFF

//Provide support for the NDI POLARIS and AURORA
PLUS_USE_POLARIS:BOOL=OFF

//Provide support for Point Grey Spinnaker API compatible imaging
// devices
PLUS_USE_SPINNAKER_VIDEO:BOOL=OFF

//Provide support for the Medtronick StealthLink Server
PLUS_USE_STEALTHLINK:BOOL=OFF

//Provide support for SteamVR tracking system
PLUS_USE_STEAMVR:BOOL=OFF

//Provide support for the Telemed ultrasound probes
PLUS_USE_TELEMED_VIDEO:BOOL=OFF

//Provide support for the ThorLabs Compact Spectrometers
PLUS_USE_THORLABS_VIDEO:BOOL=OFF

//Enable the text recognizer virtual device
PLUS_USE_TextRecognizer:BOOL=OFF

//Provide support for the Ultrasonix ultrasound systems
PLUS_USE_ULTRASONIX_VIDEO:BOOL=OFF

//Provide support for multiple USDigital encoders tracking device
PLUS_USE_USDIGITALENCODERS_TRACKER:BOOL=OFF

//Provide support for the Video-for-Windows video digitizer (legacy,
// use Microsoft Media Foundation instead)
PLUS_USE_VFW_VIDEO:BOOL=OFF

//Compile OpenIGTLink with VP9 support for compressed video streaming
PLUS_USE_VP9:BOOL=OFF

//Provide support WinProbe ultrasound systems
PLUS_USE_WINPROBE_VIDEO:BOOL=OFF

//Provide support for the WitMotion IMU Trackers
PLUS_USE_WITMOTIONTRACKER:BOOL=OFF

//Value Computed by CMake
PlusBuild_BINARY_DIR:STATIC=C:/Project/PlusB-bin

//Value Computed by CMake
PlusBuild_SOURCE_DIR:STATIC=C:/Project/PlusBuild

//The directory containing a CMake configuration file for Qt5Concurrent.
Qt5Concurrent_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5Concurrent

//The directory containing a CMake configuration file for Qt5Core.
Qt5Core_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5Core

//The directory containing a CMake configuration file for Qt5Designer.
Qt5Designer_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5Designer

//The directory containing a CMake configuration file for Qt5Gui.
Qt5Gui_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5Gui

//The directory containing a CMake configuration file for Qt5Network.
Qt5Network_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5Network

//The directory containing a CMake configuration file for Qt5OpenGL.
Qt5OpenGL_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5OpenGL

//The directory containing a CMake configuration file for Qt5Sql.
Qt5Sql_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5Sql

//The directory containing a CMake configuration file for Qt5Test.
Qt5Test_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5Test

//The directory containing a CMake configuration file for Qt5UiPlugin.
Qt5UiPlugin_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5UiPlugin

//The directory containing a CMake configuration file for Qt5WebKitWidgets.
Qt5WebKitWidgets_DIR:PATH=Qt5WebKitWidgets_DIR-NOTFOUND

//The directory containing a CMake configuration file for Qt5Widgets.
Qt5Widgets_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5Widgets

//The directory containing a CMake configuration file for Qt5XmlPatterns.
Qt5XmlPatterns_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5XmlPatterns

//The directory containing a CMake configuration file for Qt5Xml.
Qt5Xml_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5Xml

//The directory containing a CMake configuration file for Qt5.
Qt5_DIR:PATH=C:/Qt/Qt5.7.1/5.7/msvc2015_64/lib/cmake/Qt5

//Name of the computer/site where compile is being run
SITE:STRING=RT4417W-GS

//Path to the SLURM sbatch executable
SLURM_SBATCH_COMMAND:FILEPATH=SLURM_SBATCH_COMMAND-NOTFOUND

//Path to the SLURM srun executable
SLURM_SRUN_COMMAND:FILEPATH=SLURM_SRUN_COMMAND-NOTFOUND

//Path to a program.
SVNCOMMAND:FILEPATH=SVNCOMMAND-NOTFOUND


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: BASH_EXECUTABLE
BASH_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BUILDNAME
BUILDNAME-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BZRCOMMAND
BZRCOMMAND-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/Project/PlusB-bin
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=19
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//ADVANCED property for variable: CMAKE_CTEST_COMMAND
CMAKE_CTEST_COMMAND-ADVANCED:INTERNAL=1
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD
CMAKE_CXX_STANDARD-ADVANCED:INTERNAL=1
//Use C++11 standard
CMAKE_CXX_STANDARD:INTERNAL=11
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 16 2019
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=x64
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=v140
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Project/PlusBuild
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-3.19
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COVERAGE_COMMAND
COVERAGE_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COVERAGE_EXTRA_FLAGS
COVERAGE_EXTRA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_SUBMIT_RETRY_COUNT
CTEST_SUBMIT_RETRY_COUNT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_SUBMIT_RETRY_DELAY
CTEST_SUBMIT_RETRY_DELAY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CVSCOMMAND
CVSCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CVS_UPDATE_OPTIONS
CVS_UPDATE_OPTIONS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_TESTING_TIMEOUT
DART_TESTING_TIMEOUT-ADVANCED:INTERNAL=1
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[C:/Program Files/Git/cmd/git.exe][v2.29.2.windows.1()]
//Details about finding OpenHaptics
FIND_PACKAGE_MESSAGE_DETAILS_OpenHaptics:INTERNAL=[$<$<CONFIG:Release>:C:/Project/OpenHaptics/lib/x64/Release/hd.lib>;$<$<CONFIG:Debug>:C:/Project/OpenHaptics/lib/x64/Debug/hd.lib>][C:/Project/OpenHaptics/include][C:/Project/OpenHaptics/utilities/include][$<$<CONFIG:Release>:C:/Project/OpenHaptics/utilities/lib/x64/Release/hdu.lib>;$<$<CONFIG:Debug>:C:/Project/OpenHaptics/utilities/lib/x64/Debug/hdu.lib>][C:/Project/OpenHaptics/include][$<$<CONFIG:Release>:C:/Project/OpenHaptics/lib/x64/Release/hl.lib>;$<$<CONFIG:Debug>:C:/Project/OpenHaptics/lib/x64/Debug/hl.lib>][C:/Project/OpenHaptics/utilities/include][$<$<CONFIG:Release>:C:/Project/OpenHaptics/utilities/lib/x64/Release/hlu.lib>;$<$<CONFIG:Debug>:C:/Project/OpenHaptics/utilities/lib/x64/Debug/hlu.lib>][v()]
//ADVANCED property for variable: GITCOMMAND
GITCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HDAPI_HDU_INCLUDE_DIR
HDAPI_HDU_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HDAPI_HDU_LIBRARY_DEBUG
HDAPI_HDU_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HDAPI_HDU_LIBRARY_RELEASE
HDAPI_HDU_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HDAPI_INCLUDE_DIR
HDAPI_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HDAPI_LIBRARY_DEBUG
HDAPI_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HDAPI_LIBRARY_RELEASE
HDAPI_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HGCOMMAND
HGCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HLAPI_HLU_INCLUDE_DIR
HLAPI_HLU_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HLAPI_HLU_LIBRARY_DEBUG
HLAPI_HLU_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HLAPI_HLU_LIBRARY_RELEASE
HLAPI_HLU_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HLAPI_INCLUDE_DIR
HLAPI_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HLAPI_LIBRARY_DEBUG
HLAPI_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: HLAPI_LIBRARY_RELEASE
HLAPI_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MAKECOMMAND
MAKECOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MEMORYCHECK_COMMAND
MEMORYCHECK_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MEMORYCHECK_SUPPRESSIONS_FILE
MEMORYCHECK_SUPPRESSIONS_FILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OpenHaptics_ROOT_DIR
OpenHaptics_ROOT_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: P4COMMAND
P4COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PLUSAPP_GIT_REPOSITORY
PLUSAPP_GIT_REPOSITORY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PLUSAPP_GIT_REVISION
PLUSAPP_GIT_REVISION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PLUSBUILD_BUILDNAME_POSTFIX
PLUSBUILD_BUILDNAME_POSTFIX-ADVANCED:INTERNAL=1
//STRINGS property for variable: PLUSBUILD_EXTERNAL_VTK_VERSION
PLUSBUILD_EXTERNAL_VTK_VERSION-STRINGS:INTERNAL=;v8.2.0;v9.0.0;v9.0.1
//ADVANCED property for variable: PLUSBUILD_OFFLINE_BUILD
PLUSBUILD_OFFLINE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PLUSBUILD_PLUSLIBDATA_GIT_REPOSITORY
PLUSBUILD_PLUSLIBDATA_GIT_REPOSITORY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PLUSBUILD_PLUSLIBDATA_GIT_REVISION
PLUSBUILD_PLUSLIBDATA_GIT_REVISION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PLUSBUILD_USE_3DSlicer
PLUSBUILD_USE_3DSlicer-ADVANCED:INTERNAL=1
//STRINGS property for variable: PLUSBUILD_VTK_RENDERING_BACKEND
PLUSBUILD_VTK_RENDERING_BACKEND-STRINGS:INTERNAL=None;OpenGL2
//Internal CMake version for VTK.
PLUSBUILD_VTK_VERSION:INTERNAL=8.2.0
//ADVANCED property for variable: PLUSLIB_GIT_REPOSITORY
PLUSLIB_GIT_REPOSITORY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PLUSLIB_GIT_REVISION
PLUSLIB_GIT_REVISION-ADVANCED:INTERNAL=1
//Path to store IGSIO binaries
PLUS_IGSIO_DIR:INTERNAL=C:/Project/PlusB-bin/IGSIO-bin/inner-build
//Path to store IGSIO prefix data.
PLUS_IGSIO_PREFIX_DIR:INTERNAL=C:/Project/PlusB-bin/IGSIO-prefix
//Path to store IGSIO contents.
PLUS_IGSIO_SRC_DIR:INTERNAL=C:/Project/PlusB-bin/IGSIO
//Path to store itk binaries
PLUS_ITK_BIN_DIR:INTERNAL=C:/Project/PlusB-bin/itk-bin
//Path to installed itk binaries
PLUS_ITK_DIR:INTERNAL=C:/Project/PlusB-bin/itk-int/lib/cmake/ITK-4.12
//Path to install vtk
PLUS_ITK_INSTALL_DIR:INTERNAL=C:/Project/PlusB-bin/itk-int
//ADVANCED property for variable: PLUS_ITK_VERSION
PLUS_ITK_VERSION-ADVANCED:INTERNAL=1
//STRINGS property for variable: PLUS_ITK_VERSION
PLUS_ITK_VERSION-STRINGS:INTERNAL=5;4
//Path to store OpenIGTLinkIO binaries
PLUS_OpenIGTLinkIO_DIR:INTERNAL=C:/Project/PlusB-bin/OpenIGTLinkIO-bin
//Path to store OpenIGTLink binaries
PLUS_OpenIGTLink_DIR:INTERNAL=C:/Project/PlusB-bin/OpenIGTLink-bin
//Path to store PlusApp contents.
PLUS_PLUSAPP_DIR:INTERNAL=C:/Project/PlusB-bin/PlusApp
//Path to store PlusLib contents.
PLUS_PLUSLIBDATA_DIR:INTERNAL=C:/Project/PlusB-bin/PlusLibData
//Path to store PlusLib contents.
PLUS_PLUSLIB_DIR:INTERNAL=C:/Project/PlusB-bin/PlusLib
//ADVANCED property for variable: PLUS_TEST_HIGH_ACCURACY_TIMING
PLUS_TEST_HIGH_ACCURACY_TIMING-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PLUS_USE_CERTUS
PLUS_USE_CERTUS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PLUS_USE_POLARIS
PLUS_USE_POLARIS-ADVANCED:INTERNAL=1
//Path to store vtk binaries
PLUS_VTK_BIN_DIR:INTERNAL=C:/Project/PlusB-bin/vtk-bin
//Path to install vtk
PLUS_VTK_INSTALL_DIR:INTERNAL=C:/Project/PlusB-bin/vtk-int
//ADVANCED property for variable: SITE
SITE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SLURM_SBATCH_COMMAND
SLURM_SBATCH_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SLURM_SRUN_COMMAND
SLURM_SRUN_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SVNCOMMAND
SVNCOMMAND-ADVANCED:INTERNAL=1
//The name of the target to list as a dependency to ensure build
// order correctness.
VTK_BUILD_DEPENDENCY_TARGET:INTERNAL=vtk

